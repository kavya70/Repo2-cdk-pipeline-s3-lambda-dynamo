{
  "Resources": {
    "mybucketidBE83F1B1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "s3-lamda-dynamo"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/my-bucket-id/Resource"
      }
    },
    "mybucketidNotifications8CA240D4": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "mybucketidBE83F1B1"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "Handler886CB40B",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "HandlerAllowBucketNotificationsFromPipelineStackpreprodWebServicemybucketid801F0332F450F53F"
      ],
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/my-bucket-id/Notifications/Resource"
      }
    },
    "HandlerServiceRoleFCDC14AE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Handler/ServiceRole/Resource"
      }
    },
    "HandlerServiceRoleDefaultPolicyCBD0CC91": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "mybucketidBE83F1B1",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "mybucketidBE83F1B1",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:dynamodb:ap-south-1:402122568686:table/movieDetails",
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "HandlerServiceRoleDefaultPolicyCBD0CC91",
        "Roles": [
          {
            "Ref": "HandlerServiceRoleFCDC14AE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Handler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Handler886CB40B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-402122568686-ap-south-1",
          "S3Key": "218720c64d223afcdd2003c51349f6f63dd0f9e39368c76f3cae1c8d762b65c6.zip"
        },
        "Handler": "handler.handler",
        "Role": {
          "Fn::GetAtt": [
            "HandlerServiceRoleFCDC14AE",
            "Arn"
          ]
        },
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "HandlerServiceRoleDefaultPolicyCBD0CC91",
        "HandlerServiceRoleFCDC14AE"
      ],
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Handler/Resource",
        "aws:asset:path": "asset.218720c64d223afcdd2003c51349f6f63dd0f9e39368c76f3cae1c8d762b65c6",
        "aws:asset:property": "Code"
      }
    },
    "HandlerAllowBucketNotificationsFromPipelineStackpreprodWebServicemybucketid801F0332F450F53F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Handler886CB40B",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": "402122568686",
        "SourceArn": {
          "Fn::GetAtt": [
            "mybucketidBE83F1B1",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Handler/AllowBucketNotificationsFromPipelineStackpreprodWebServicemybucketid801F0332"
      }
    },
    "HandlerCurrentVersion93FB80BF3b89bffbe34c37f89787ff5879eccb38": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "Handler886CB40B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Handler/CurrentVersion/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "exports.handler = (event, context) => {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies\n    const s3 = new (require('aws-sdk').S3)();\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const https = require('https');\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const url = require('url');\n    log(JSON.stringify(event, undefined, 2));\n    const props = event.ResourceProperties;\n    if (event.RequestType === 'Delete') {\n        props.NotificationConfiguration = {}; // this is how you clean out notifications\n    }\n    const req = {\n        Bucket: props.BucketName,\n        NotificationConfiguration: props.NotificationConfiguration,\n    };\n    return s3.putBucketNotificationConfiguration(req, (err, data) => {\n        log({ err, data });\n        if (err) {\n            return submitResponse('FAILED', err.message + `\\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);\n        }\n        else {\n            return submitResponse('SUCCESS');\n        }\n    });\n    function log(obj) {\n        console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);\n    }\n    // eslint-disable-next-line max-len\n    // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule\n    // to allow sending an error messge as a reason.\n    function submitResponse(responseStatus, reason) {\n        const responseBody = JSON.stringify({\n            Status: responseStatus,\n            Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,\n            PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,\n            StackId: event.StackId,\n            RequestId: event.RequestId,\n            LogicalResourceId: event.LogicalResourceId,\n            NoEcho: false,\n        });\n        log({ responseBody });\n        const parsedUrl = url.parse(event.ResponseURL);\n        const options = {\n            hostname: parsedUrl.hostname,\n            port: 443,\n            path: parsedUrl.path,\n            method: 'PUT',\n            headers: {\n                'content-type': '',\n                'content-length': responseBody.length,\n            },\n        };\n        const request = https.request(options, (r) => {\n            log({ statusCode: r.statusCode, statusMessage: r.statusMessage });\n            context.done();\n        });\n        request.on('error', (error) => {\n            log({ sendError: error });\n            context.done();\n        });\n        request.write(responseBody);\n        request.end();\n    }\n};"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "HandlerAlias736CE376": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "Handler886CB40B"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "HandlerCurrentVersion93FB80BF3b89bffbe34c37f89787ff5879eccb38",
            "Version"
          ]
        },
        "Name": "Current"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "DeploymentGroupApplication7B89ABEB"
          },
          "DeploymentGroupName": {
            "Ref": "DeploymentGroup6D277AF0"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/HandlerAlias/Resource"
      }
    },
    "Gateway43CB3636": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Endpoint for a simple Lambda-powered web service",
        "Name": "Gateway"
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Resource"
      }
    },
    "GatewayCloudWatchRole34305E06": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/CloudWatchRole/Resource"
      }
    },
    "GatewayAccount6D7AA49C": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "GatewayCloudWatchRole34305E06",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "Gateway43CB3636"
      ],
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Account"
      }
    },
    "GatewayDeployment880EB8C2655d297c16ad625f6b860970d0039ee5": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "Gateway43CB3636"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "GatewayproxyANYCE067C19",
        "Gatewayproxy441946D2",
        "GatewayANY8DB43F89"
      ],
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Deployment/Resource"
      }
    },
    "GatewayDeploymentStageprod62BC6904": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "Gateway43CB3636"
        },
        "DeploymentId": {
          "Ref": "GatewayDeployment880EB8C2655d297c16ad625f6b860970d0039ee5"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/DeploymentStage.prod/Resource"
      }
    },
    "Gatewayproxy441946D2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "Gateway43CB3636",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "Gateway43CB3636"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/{proxy+}/Resource"
      }
    },
    "GatewayproxyANYApiPermissionPipelineStackpreprodWebServiceGateway8D0F2F1DANYproxy3CB18CF8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "HandlerAlias736CE376"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-south-1:402122568686:",
              {
                "Ref": "Gateway43CB3636"
              },
              "/",
              {
                "Ref": "GatewayDeploymentStageprod62BC6904"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/{proxy+}/ANY/ApiPermission.PipelineStackpreprodWebServiceGateway8D0F2F1D.ANY..{proxy+}"
      }
    },
    "GatewayproxyANYApiPermissionTestPipelineStackpreprodWebServiceGateway8D0F2F1DANYproxy617ECE98": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "HandlerAlias736CE376"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-south-1:402122568686:",
              {
                "Ref": "Gateway43CB3636"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/{proxy+}/ANY/ApiPermission.Test.PipelineStackpreprodWebServiceGateway8D0F2F1D.ANY..{proxy+}"
      }
    },
    "GatewayproxyANYCE067C19": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "Gatewayproxy441946D2"
        },
        "RestApiId": {
          "Ref": "Gateway43CB3636"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Ref": "HandlerAlias736CE376"
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/{proxy+}/ANY/Resource"
      }
    },
    "GatewayANYApiPermissionPipelineStackpreprodWebServiceGateway8D0F2F1DANY489461BB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "HandlerAlias736CE376"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-south-1:402122568686:",
              {
                "Ref": "Gateway43CB3636"
              },
              "/",
              {
                "Ref": "GatewayDeploymentStageprod62BC6904"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/ANY/ApiPermission.PipelineStackpreprodWebServiceGateway8D0F2F1D.ANY.."
      }
    },
    "GatewayANYApiPermissionTestPipelineStackpreprodWebServiceGateway8D0F2F1DANYC90C8307": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "HandlerAlias736CE376"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-south-1:402122568686:",
              {
                "Ref": "Gateway43CB3636"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/ANY/ApiPermission.Test.PipelineStackpreprodWebServiceGateway8D0F2F1D.ANY.."
      }
    },
    "GatewayANY8DB43F89": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "Gateway43CB3636",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "Gateway43CB3636"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Ref": "HandlerAlias736CE376"
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/Gateway/Default/ANY/Resource"
      }
    },
    "FailureAlarm93B41FAF": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": "Gateway"
          }
        ],
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 1
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/FailureAlarm/Resource"
      }
    },
    "DeploymentGroupApplication7B89ABEB": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/DeploymentGroup/Application/Resource"
      }
    },
    "DeploymentGroupServiceRoleA00955F3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.ap-south-1.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSCodeDeployRoleForLambda"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/DeploymentGroup/ServiceRole/Resource"
      }
    },
    "DeploymentGroup6D277AF0": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "DeploymentGroupApplication7B89ABEB"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "DeploymentGroupServiceRoleA00955F3",
            "Arn"
          ]
        },
        "AlarmConfiguration": {
          "Alarms": [
            {
              "Name": {
                "Ref": "FailureAlarm93B41FAF"
              }
            }
          ],
          "Enabled": true
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaCanary10Percent10Minutes",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      },
      "Metadata": {
        "aws:cdk:path": "PipelineStack/pre-prod/WebService/DeploymentGroup/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.115.0,@aws-cdk/assets=1.56.0,@aws-cdk/aws-apigateway=1.56.0,@aws-cdk/aws-applicationautoscaling=1.56.0,@aws-cdk/aws-autoscaling=1.56.0,@aws-cdk/aws-autoscaling-common=1.56.0,@aws-cdk/aws-autoscaling-hooktargets=1.56.0,@aws-cdk/aws-batch=1.56.0,@aws-cdk/aws-certificatemanager=1.56.0,@aws-cdk/aws-cloudformation=1.56.0,@aws-cdk/aws-cloudfront=1.56.0,@aws-cdk/aws-cloudwatch=1.56.0,@aws-cdk/aws-codebuild=1.56.0,@aws-cdk/aws-codecommit=1.56.0,@aws-cdk/aws-codedeploy=1.56.0,@aws-cdk/aws-codeguruprofiler=1.56.0,@aws-cdk/aws-codepipeline=1.56.0,@aws-cdk/aws-codepipeline-actions=1.56.0,@aws-cdk/aws-cognito=1.56.0,@aws-cdk/aws-dynamodb=1.56.0,@aws-cdk/aws-ec2=1.56.0,@aws-cdk/aws-ecr=1.56.0,@aws-cdk/aws-ecr-assets=1.56.0,@aws-cdk/aws-ecs=1.56.0,@aws-cdk/aws-efs=1.56.0,@aws-cdk/aws-elasticloadbalancing=1.56.0,@aws-cdk/aws-elasticloadbalancingv2=1.56.0,@aws-cdk/aws-events=1.56.0,@aws-cdk/aws-events-targets=1.56.0,@aws-cdk/aws-iam=1.56.0,@aws-cdk/aws-kinesis=1.56.0,@aws-cdk/aws-kms=1.56.0,@aws-cdk/aws-lambda=1.56.0,@aws-cdk/aws-logs=1.56.0,@aws-cdk/aws-route53=1.56.0,@aws-cdk/aws-route53-targets=1.56.0,@aws-cdk/aws-s3=1.56.0,@aws-cdk/aws-s3-assets=1.56.0,@aws-cdk/aws-s3-notifications=1.56.0,@aws-cdk/aws-sam=1.56.0,@aws-cdk/aws-secretsmanager=1.56.0,@aws-cdk/aws-servicecatalog=1.56.0,@aws-cdk/aws-servicediscovery=1.56.0,@aws-cdk/aws-sns=1.56.0,@aws-cdk/aws-sns-subscriptions=1.56.0,@aws-cdk/aws-sqs=1.56.0,@aws-cdk/aws-ssm=1.56.0,@aws-cdk/aws-stepfunctions=1.56.0,@aws-cdk/cloud-assembly-schema=1.56.0,@aws-cdk/core=1.56.0,@aws-cdk/custom-resources=1.56.0,@aws-cdk/cx-api=1.56.0,@aws-cdk/pipelines=1.56.0,@aws-cdk/region-info=1.56.0,jsii-runtime=Python/3.7.7"
      }
    }
  },
  "Outputs": {
    "GatewayEndpoint4DF49EE0": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Gateway43CB3636"
            },
            ".execute-api.ap-south-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "GatewayDeploymentStageprod62BC6904"
            },
            "/"
          ]
        ]
      }
    },
    "Url": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "Gateway43CB3636"
            },
            ".execute-api.ap-south-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "GatewayDeploymentStageprod62BC6904"
            },
            "/"
          ]
        ]
      }
    }
  }
}